{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-bootstrap/esm/Col.js","../../src/OverlayScrollbarsComponent.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/overlayscrollbars/js/OverlayScrollbars.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","DEFAULT_BREAKPOINTS","ThemeContext","React","prefixes","breakpoints","minBreakpoint","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","useContext","useBootstrapBreakpoints","useBootstrapMinBreakpoint","useIsRTL","dir","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","unsupportedIterableToArray","TypeError","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","displayName","Component","defaultProps","BsComponent","ref","className","bsPrefix","as","Tag","props","resolvedPrefix","_jsx","_classCallCheck","instance","Constructor","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","constructor","_typeof","obj","_possibleConstructorReturn","self","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","getPrototypeOf","NewTarget","this","Reflect","construct","_getPrototypeOf","o","setPrototypeOf","__proto__","_excluded","useButtonProps","tagName","disabled","href","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","onKeyDown","Button","_ref","asProp","_objectWithoutPropertiesLoose","assign","buttonProps","_createForOfIteratorHelper","allowArrayLike","it","F","s","n","e","f","normalCompletion","didErr","step","_e2","property","receiver","get","base","object","desc","getOwnPropertyDescriptor","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","useCol","colProps","OverlayScrollbarsComponent","_osInstance","_osTargetRef","createRef","current","osTarget","options","extensions","mergeHostClassNames","valid","destroy","prevProps","divProps","children","osInstance","host","getElements","regex","RegExp","osClassNames","split","filter","name","match","_isNativeReflectConstruct","sham","Proxy","Date","global","window","define","document","PLUGINNAME","TYPES","a","b","u","z","LEXICON","c","l","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","charAt","_cssPrefixes","_jsPrefixes","_cssProperty","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","_cssPropertyValue","values","suffix","prop","dummyStyle","possbleValues","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","fNOP","fBound","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","getTime","stpP","cancelBubble","prvD","cancelable","returnValue","page","strPage","strClient","strX","strY","eventDoc","originalEvent","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","isA","def","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","hasOwnConstructor","hasIsPrototypeOf","each","callback","isArrayLike","stripAndCollapse","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","duration","easing","complete","setAnimationValue","guaranteedNext","progress","specialEasing","hasOptions","from","to","start","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","elms","elements","innerHTML","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","classList","classNamePrepared","contains","addClass","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","_targets","_instancePropertyString","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","overflowBehaviorAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","elementName","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observe","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","textareaUpdate","mutation","doUpdateForce","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","hostClassNamesChanged","updateViewportAttrsFromTarget","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSizeChanged","bodyMinSize","oldClassNames","newClassNames","currClasses","diff","getArrayDifferences","idx","mutationType","strClosest","float","bodyMinSizeC","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","sizeIsAffected","checkPropertyName","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorIsLastPosition","_cursorPosition","_cursorMax","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","setupScrollbarEvents","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollDelta","isFinite","documentMouseTouchUp","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","getCSSTransitionString","isTrack","element2","_l_t","setupScrollbarCornerEvents","reconnectMutationObserver","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","targetCSSObject","zeroX","zeroY","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","regExpValidate","properties","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","doAdd","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","factory"],"mappings":"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,CAChC,IAAIG,EAAO9M,EAAU2M,GAErB,OADAG,EAAKnjB,QAAQA,GACNmjB,EAIX,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAgHAC,EACAC,GACAC,GAOAC,GAEAC,GAMAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GAQAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GArOAC,GAAqB,GACrBC,GAAwB,GACxBC,GAAsB,GACtBC,GAAgB,GAChBC,GAA0B,GAG1BC,GAAkB,UAClBC,GAAkB,UAClBC,GAAmB,WACnBC,GAAkB,UAClBC,GAAU,MACVC,GAAY,QACZC,GAAa,SACbC,GAAW,OACXC,GAAe,OACfC,GAAe,OACfC,GAAY,QACZC,GAAa,SACbC,GAAY,QACZ3gB,GAAY,GACZ4gB,GAAW,OACXC,GAAW,OACXC,GAAa,SACbC,GAAqB,OACrBC,GAAQ,IACRC,GAAQ,IACRC,GAAU,IACVnhB,GAAY,IACZohB,GAAgB,YAChBC,GAAsB,cACtBC,GAAoB,YACpBphB,GAAiB6gB,GAAa,OAC9B5gB,GAAgB4gB,GAAa,MAC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","file":"static/js/5.d9041371.chunk.js","sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\n\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: { ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({ ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, { ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n\n    if (disabled) {\n      href = undefined;\n    }\n  }\n\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));"],"sourceRoot":""}