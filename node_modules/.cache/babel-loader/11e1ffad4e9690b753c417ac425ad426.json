{"ast":null,"code":"var _jsxFileName = \"/Users/caio/Projects/Samples/front-vawlog/src/views/home/chart/ChartSmallDoughnutChart1.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-underscore-dangle,no-unused-vars */\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Chart, registerables } from 'chart.js';\nimport { useSelector } from 'react-redux';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChartSmallDoughnutChart1 = () => {\n  _s();\n  const {\n    themeValues\n  } = useSelector(state => state.settings);\n  const chartContainer = useRef(null);\n  const legendRef = useRef(null);\n  const SmallDoughnutChartPlugin = React.useMemo(() => {\n    return {\n      id: 'smallDoughnut',\n      afterDraw: (chart, args, options) => {\n        const {\n          ctx\n        } = chart;\n        const firstSegment = chart.getDatasetMeta(0).data[0];\n        const gap = (firstSegment.outerRadius - firstSegment.innerRadius) * (1 - 0.3) / 2;\n        ctx.save();\n        ctx.fillStyle = firstSegment.options.backgroundColor;\n        ctx.beginPath();\n        ctx.arc(firstSegment.x, firstSegment.y, firstSegment.outerRadius - gap, 0, 2 * Math.PI);\n        ctx.arc(firstSegment.x, firstSegment.y, firstSegment.innerRadius + gap, 0, 2 * Math.PI, true);\n        ctx.closePath();\n        ctx.fill();\n        ctx.restore();\n      }\n    };\n  }, []);\n  const CustomSmallLegendDoughnutPlugin = React.useMemo(() => {\n    return {\n      id: 'htmlLegendDoughnutSmall',\n      afterUpdate: (chart, args, options) => {\n        const items = chart.options.plugins.legend.labels.generateLabels(chart);\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: items.map(legend => {\n            const {\n              strokeStyle,\n              text,\n              index,\n              hidden\n            } = legend;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-small text-muted text\",\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cta-3 text-primary value\",\n                children: [chart.data.datasets[0].data[0], \" / \", chart.data.datasets[0].data[1] + chart.data.datasets[0].data[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 10\n              }, this)]\n            }, `customLegend${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false), legendRef.current);\n      }\n    };\n  }, []);\n  const SmallCenterTextPlugin = React.useMemo(() => {\n    return {\n      id: 'centerTextPlugin',\n      afterDraw: (chart, args, options) => {\n        const {\n          chartArea,\n          ctx,\n          _metasets,\n          data: {\n            datasets\n          }\n        } = chart;\n        const {\n          right,\n          bottom\n        } = chartArea;\n        const activeValue = datasets[0].data[0];\n        const {\n          total\n        } = _metasets[0];\n        let activePercentage = parseFloat((activeValue / total * 100).toFixed(1));\n        activePercentage = datasets[0].data[0] / total;\n        activePercentage = parseFloat((activePercentage * 100).toFixed(1));\n        ctx.font = `12px${themeValues.font}`;\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = themeValues.primary;\n        const text = `${activePercentage}%`;\n        const textX = Math.round((right - ctx.measureText(text).width) / 2);\n        const textY = bottom / 2;\n        ctx.fillText(text, textX, textY);\n        ctx.save();\n      }\n    };\n  }, [themeValues]);\n  const data = React.useMemo(() => {\n    return {\n      labels: ['Ordens abertas X Finalizadas'],\n      datasets: [{\n        data: [0, 0],\n        backgroundColor: [themeValues.primary, 'rgba(0,0,0,0)'],\n        borderWidth: 0,\n        fill: true\n      }]\n    };\n  }, [themeValues]);\n  const config = React.useMemo(() => {\n    return {\n      type: 'doughnut',\n      plugins: [CustomSmallLegendDoughnutPlugin, SmallCenterTextPlugin, SmallDoughnutChartPlugin],\n      options: {\n        plugins: {\n          crosshair: false,\n          datalabels: false,\n          tooltip: false,\n          legend: {\n            display: false\n          },\n          streaming: false\n        },\n        aspectRatio: 1,\n        responsive: true,\n        maintainAspectRatio: false,\n        cutout: 27,\n        title: {\n          display: true\n        }\n      },\n      data\n    };\n  }, [data, CustomSmallLegendDoughnutPlugin, SmallCenterTextPlugin, SmallDoughnutChartPlugin]);\n  useEffect(() => {\n    let myChart = null;\n    if (chartContainer && chartContainer.current) {\n      Chart.register(...registerables);\n      myChart = new Chart(chartContainer.current, config);\n    }\n    return () => {\n      if (myChart) {\n        myChart.destroy();\n      }\n    };\n  }, [config]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"g-0 d-flex w-100\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      ref: legendRef,\n      className: \"sh-8 d-flex flex-column justify-content-center custom-legend-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartContainer,\n        className: \"sw-8 sh-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 3\n  }, this);\n};\n_s(ChartSmallDoughnutChart1, \"zhFjqcsDXiIPx8FaFHMJKeWvIU8=\", false, function () {\n  return [useSelector];\n});\n_c = ChartSmallDoughnutChart1;\nexport default _c2 = /*#__PURE__*/React.memo(ChartSmallDoughnutChart1);\nvar _c, _c2;\n$RefreshReg$(_c, \"ChartSmallDoughnutChart1\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useRef","ReactDOM","Chart","registerables","useSelector","Col","Row","ChartSmallDoughnutChart1","themeValues","state","settings","chartContainer","legendRef","SmallDoughnutChartPlugin","useMemo","id","afterDraw","chart","args","options","ctx","firstSegment","getDatasetMeta","data","gap","outerRadius","innerRadius","save","fillStyle","backgroundColor","beginPath","arc","x","y","Math","PI","closePath","fill","restore","CustomSmallLegendDoughnutPlugin","afterUpdate","items","plugins","legend","labels","generateLabels","render","map","strokeStyle","text","index","hidden","datasets","current","SmallCenterTextPlugin","chartArea","_metasets","right","bottom","activeValue","total","activePercentage","parseFloat","toFixed","font","textBaseline","primary","textX","round","measureText","width","textY","fillText","borderWidth","config","type","crosshair","datalabels","tooltip","display","streaming","aspectRatio","responsive","maintainAspectRatio","cutout","title","myChart","register","destroy","memo"],"sources":["/Users/caio/Projects/Samples/front-vawlog/src/views/home/chart/ChartSmallDoughnutChart1.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle,no-unused-vars */\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Chart, registerables } from 'chart.js';\n\nimport { useSelector } from 'react-redux';\nimport { Col, Row } from 'react-bootstrap';\n\nconst ChartSmallDoughnutChart1 = () => {\n\tconst { themeValues } = useSelector((state) => state.settings);\n\tconst chartContainer = useRef(null);\n\tconst legendRef = useRef(null);\n\n\tconst SmallDoughnutChartPlugin = React.useMemo(() => {\n\t\treturn {\n\t\t\tid: 'smallDoughnut',\n\t\t\tafterDraw: (chart, args, options) => {\n\t\t\t\tconst { ctx } = chart;\n\t\t\t\tconst firstSegment = chart.getDatasetMeta(0).data[0];\n\t\t\t\tconst gap = ((firstSegment.outerRadius - firstSegment.innerRadius) * (1 - 0.3)) / 2;\n\t\t\t\tctx.save();\n\t\t\t\tctx.fillStyle = firstSegment.options.backgroundColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(firstSegment.x, firstSegment.y, firstSegment.outerRadius - gap, 0, 2 * Math.PI);\n\t\t\t\tctx.arc(firstSegment.x, firstSegment.y, firstSegment.innerRadius + gap, 0, 2 * Math.PI, true);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t\tctx.restore();\n\t\t\t},\n\t\t};\n\t}, []);\n\tconst CustomSmallLegendDoughnutPlugin = React.useMemo(() => {\n\t\treturn {\n\t\t\tid: 'htmlLegendDoughnutSmall',\n\t\t\tafterUpdate: (chart, args, options) => {\n\t\t\t\tconst items = chart.options.plugins.legend.labels.generateLabels(chart);\n\t\t\t\tReactDOM.render(\n\t\t\t\t\t<>\n\t\t\t\t\t\t{items.map((legend) => {\n\t\t\t\t\t\t\tconst { strokeStyle, text, index, hidden } = legend;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={`customLegend${index}`}>\n\t\t\t\t\t\t\t\t\t<div className=\"text-small text-muted text\">{text}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"cta-3 text-primary value\">\n\t\t\t\t\t\t\t\t\t\t{chart.data.datasets[0].data[0]} / {chart.data.datasets[0].data[1] + chart.data.datasets[0].data[0]}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</>,\n\t\t\t\t\tlegendRef.current\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t}, []);\n\tconst SmallCenterTextPlugin = React.useMemo(() => {\n\t\treturn {\n\t\t\tid: 'centerTextPlugin',\n\t\t\tafterDraw: (chart, args, options) => {\n\t\t\t\tconst {\n\t\t\t\t\tchartArea,\n\t\t\t\t\tctx,\n\t\t\t\t\t_metasets,\n\t\t\t\t\tdata: { datasets },\n\t\t\t\t} = chart;\n\t\t\t\tconst { right, bottom } = chartArea;\n\n\t\t\t\tconst activeValue = datasets[0].data[0];\n\t\t\t\tconst { total } = _metasets[0];\n\t\t\t\tlet activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n\t\t\t\tactivePercentage = datasets[0].data[0] / total;\n\t\t\t\tactivePercentage = parseFloat((activePercentage * 100).toFixed(1));\n\t\t\t\tctx.font = `12px${themeValues.font}`;\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillStyle = themeValues.primary;\n\t\t\t\tconst text = `${activePercentage}%`;\n\t\t\t\tconst textX = Math.round((right - ctx.measureText(text).width) / 2);\n\t\t\t\tconst textY = bottom / 2;\n\t\t\t\tctx.fillText(text, textX, textY);\n\t\t\t\tctx.save();\n\t\t\t},\n\t\t};\n\t}, [themeValues]);\n\n\tconst data = React.useMemo(() => {\n\t\treturn {\n\t\t\tlabels: ['Ordens abertas X Finalizadas'],\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tdata: [0, 0],\n\t\t\t\t\tbackgroundColor: [themeValues.primary, 'rgba(0,0,0,0)'],\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}, [themeValues]);\n\tconst config = React.useMemo(() => {\n\t\treturn {\n\t\t\ttype: 'doughnut',\n\t\t\tplugins: [CustomSmallLegendDoughnutPlugin, SmallCenterTextPlugin, SmallDoughnutChartPlugin],\n\t\t\toptions: {\n\t\t\t\tplugins: {\n\t\t\t\t\tcrosshair: false,\n\t\t\t\t\tdatalabels: false,\n\t\t\t\t\ttooltip: false,\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\tstreaming: false,\n\t\t\t\t},\n\t\t\t\taspectRatio: 1,\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tcutout: 27,\n\t\t\t\ttitle: {\n\t\t\t\t\tdisplay: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\tdata,\n\t\t};\n\t}, [data, CustomSmallLegendDoughnutPlugin, SmallCenterTextPlugin, SmallDoughnutChartPlugin]);\n\n\tuseEffect(() => {\n\t\tlet myChart = null;\n\t\tif (chartContainer && chartContainer.current) {\n\t\t\tChart.register(...registerables);\n\t\t\tmyChart = new Chart(chartContainer.current, config);\n\t\t}\n\t\treturn () => {\n\t\t\tif (myChart) {\n\t\t\t\tmyChart.destroy();\n\t\t\t}\n\t\t};\n\t}, [config]);\n\n\treturn (\n\t\t<Row className=\"g-0 d-flex w-100\">\n\t\t\t<Col ref={legendRef} className=\"sh-8 d-flex flex-column justify-content-center custom-legend-container\" />\n\t\t\t<Col xs=\"auto\">\n\t\t\t\t<canvas ref={chartContainer} className=\"sw-8 sh-8\" />\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default React.memo(ChartSmallDoughnutChart1);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}