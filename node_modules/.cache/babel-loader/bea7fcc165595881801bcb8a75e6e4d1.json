{"ast":null,"code":"var _jsxFileName = \"/Users/caio/Projects/Samples/front-vawlog/src/layout/nav/Nav.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\nimport NavUserMenu from './NavUserMenu';\nimport NavIconMenu from './NavIconMenu';\nimport MainMenu from './main-menu/MainMenu';\nimport NavLogo from './NavLogo';\nimport NavMobileButtons from './NavMobileButtons';\nimport { menuChangeAttrMenuAnimate, menuChangeCollapseAll } from './main-menu/menuSlice';\nimport NavLanguageSwitcher from './NavLanguageSwitcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DELAY = 80;\nconst Nav = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    navClasses,\n    placementStatus,\n    behaviourStatus,\n    attrMobile,\n    menuPadding\n  } = useSelector(state => state.menu);\n  const mouseActionTimer = useRef(null);\n\n  // Vertical menu semihidden state showing\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseEnterDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangeAttrMenuAnimate('show'));\n    }\n  };\n\n  // Delayed one that hides or shows the menu. It's required to prevent collapse animation getting stucked\n  const onMouseEnter = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseEnterDelay();\n    }, DELAY);\n  };\n\n  // Vertical menu semihidden state hiding\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseLeaveDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n  };\n  const onMouseLeave = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseLeaveDelay();\n    }, DELAY);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"nav\",\n    className: classNames('nav-container d-flex', navClasses),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-content d-flex\",\n      style: placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && menuPadding ? {\n        paddingRight: menuPadding\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(NavLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavUserMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavIconMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavMobileButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-shadow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Nav, \"Wyf+K0PErhewwEjeeT2/Rg1zxNs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Nav;\nexport default _c2 = /*#__PURE__*/React.memo(Nav);\nvar _c, _c2;\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useRef","useDispatch","useSelector","classNames","MENU_BEHAVIOUR","MENU_PLACEMENT","NavUserMenu","NavIconMenu","MainMenu","NavLogo","NavMobileButtons","menuChangeAttrMenuAnimate","menuChangeCollapseAll","NavLanguageSwitcher","DELAY","Nav","dispatch","navClasses","placementStatus","behaviourStatus","attrMobile","menuPadding","state","menu","mouseActionTimer","onMouseEnterDelay","placementHtmlData","Vertical","behaviourHtmlData","Unpinned","onMouseEnter","current","clearTimeout","setTimeout","onMouseLeaveDelay","onMouseLeave","Horizontal","paddingRight","memo"],"sources":["/Users/caio/Projects/Samples/front-vawlog/src/layout/nav/Nav.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\nimport NavUserMenu from './NavUserMenu';\nimport NavIconMenu from './NavIconMenu';\nimport MainMenu from './main-menu/MainMenu';\nimport NavLogo from './NavLogo';\nimport NavMobileButtons from './NavMobileButtons';\nimport { menuChangeAttrMenuAnimate, menuChangeCollapseAll } from './main-menu/menuSlice';\nimport NavLanguageSwitcher from './NavLanguageSwitcher';\n\nconst DELAY = 80;\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  const { navClasses, placementStatus, behaviourStatus, attrMobile, menuPadding } = useSelector((state) => state.menu);\n  const mouseActionTimer = useRef(null);\n\n  // Vertical menu semihidden state showing\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseEnterDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangeAttrMenuAnimate('show'));\n    }\n  };\n\n  // Delayed one that hides or shows the menu. It's required to prevent collapse animation getting stucked\n  const onMouseEnter = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseEnterDelay();\n    }, DELAY);\n  };\n\n  // Vertical menu semihidden state hiding\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseLeaveDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n  };\n\n  const onMouseLeave = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseLeaveDelay();\n    }, DELAY);\n  };\n\n  return (\n    <div id=\"nav\" className={classNames('nav-container d-flex', navClasses)} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n      <div\n        className=\"nav-content d-flex\"\n        style={placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && menuPadding ? { paddingRight: menuPadding } : {}}\n      >\n        <NavLogo />\n        {/* <NavLanguageSwitcher /> */}\n        <NavUserMenu />\n        <NavIconMenu />\n        <MainMenu />\n        <NavMobileButtons />\n      </div>\n      <div className=\"nav-shadow\" />\n    </div>\n  );\n};\nexport default React.memo(Nav);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}