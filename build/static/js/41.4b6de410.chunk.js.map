{"version":3,"sources":["views/home/chartLogsMonth.js","views/home/chartLogsDays.js","views/home/chartOrdersMonth.js","views/home/chartOrdersDays.js","views/home/chartNewOrganizationsMonth.js","views/home/chartNewOrganizationsDays.js","views/home/chartOrdersByStatusMonth.js","views/home/chartOrdersByStatusDays.js","views/home/chartOrdersByTypeMonth.js","views/home/index.js","components/breadcrumb-list/BreadcrumbList.js","services/api.js"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","props","data","labels","label","datasets","values","borderColor","backgroundColor","Card","Body","height","options","responsive","maintainAspectRatio","indexAxis","elements","bar","borderWidth","plugins","legend","position","title","display","text","length","map","row","i","Object","keys","r","push","sets","colors","name","color","scales","x","stacked","y","day","total","PointElement","LineElement","interaction","mode","intersect","type","y1","grid","drawOnChartArea","DashboardsAnalytic","useState","loading","setLoading","accessMonth","setAccessMonth","accessDays","setAccessDays","ordersMonth","setOrdersMonth","ordersDays","setOrdersDays","organizationsMonth","setOrganizationsMonth","organizationsDays","setOrganizationsDays","ordersByStatusMonth","setOrdersByStatusMonth","ordersByStatusDays","setOrdersByStatusDays","ordersByTypeMonth","setOrdersByTypeMonth","loadDashboard","a","api","get","response","data_name","data_value","data_labels","data_values","useEffect","HtmlHead","description","className","Row","Col","md","BreadcrumbList","items","to","Spinner","as","animation","size","sm","basePath","DEFAULT_PATHS","APP","breadcrumb","bIndex","Item","linkAs","Link","linkProps","axios","create","baseURL","API_URL","JSON","parse","localStorage","getItem","auth","interceptors","request","use","config","currentUser","token","headers","Authorization","error","window","location","href","APP_URL"],"mappings":"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","file":"static/js/41.4b6de410.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Acessos por mês',\n            },\n        },\n    };\n\n    const labels = props.data.label;\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'Acessos',\n                data: props.data.values,\n                borderColor: 'rgb(255, 99, 132)',\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\n            },\n        ],\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n\tChart as ChartJS,\n\tCategoryScale,\n\tLinearScale,\n\tBarElement,\n\tTitle,\n\tTooltip,\n\tLegend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n\tCategoryScale,\n\tLinearScale,\n\tBarElement,\n\tTitle,\n\tTooltip,\n\tLegend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n\tconst options = {\n\t\tresponsive: true,\n\t\tmaintainAspectRatio: false,\n\t\tindexAxis: 'x',\n\t\telements: {\n\t\t\tbar: {\n\t\t\t\tborderWidth: 2,\n\t\t\t},\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tposition: 'bottom',\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tdisplay: true,\n\t\t\t\ttext: 'Acessos por dia/mês atual',\n\t\t\t},\n\t\t},\n\t};\n\n\tconst labels = props.data.label;\n\n\tconst data = {\n\t\tlabels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Acessos',\n\t\t\t\tdata: props.data.values,\n\t\t\t\tborderColor: 'rgb(29, 156, 214)',\n\t\t\t\tbackgroundColor: 'rgba(29, 156, 214, 0.5)',\n\t\t\t},\n\t\t],\n\t};\n\n\treturn <Card>\n\t\t<Card.Body>\n\t\t\t<Bar height={300} options={options} data={data} />\n\t\t</Card.Body>\n\t</Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Ordens de coleta por mês',\n            },\n        },\n    };\n\n    const labels = props.data.label;\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'Ordens',\n                data: props.data.values,\n                borderColor: 'rgb(0, 255, 212)',\n                backgroundColor: 'rgba(0, 255, 212, 0.5)',\n            },\n        ],\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Ordens de coleta por dia / mês atual',\n            },\n        },\n    };\n\n    const labels = props.data.label;\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'Ordens',\n                data: props.data.values,\n                borderColor: 'rgb(249, 217, 73)',\n                backgroundColor: 'rgba(249, 217, 73, 0.5)',\n            },\n        ],\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Novos clientes por mês',\n            },\n        },\n    };\n\n    const labels = props.data.label;\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'Clientes',\n                data: props.data.values,\n                borderColor: 'rgb(145, 127, 179)',\n                backgroundColor: 'rgba(145, 127, 179, 0.5)',\n            },\n        ],\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Novos clientes por dia / Mês atual',\n            },\n        },\n    };\n\n    const labels = props.data.label;\n\n    const data = {\n        labels,\n        datasets: [\n            {\n                label: 'Clientes',\n                data: props.data.values,\n                borderColor: 'rgb(255, 96, 0)',\n                backgroundColor: 'rgba(255, 96, 0, 0.5)',\n            },\n        ],\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        scales: {\n            x: {\n                stacked: true,\n            },\n            y: {\n                stacked: true,\n            },\n        },\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Ordens de coleta por mês / por status',\n            },\n        },\n    };\n    const labels = []\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                if (i === 0) {\n                    Object.keys(row.data).map((r) => {\n                        labels.push(r)\n                    })\n                }\n            })\n        }\n    }\n\n    const sets = []\n\n    const colors = [\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n\n    ]\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                let data = []\n\n                Object.values(row.data).map((r) => {\n                    data.push(r)\n                })\n\n                sets.push({\n                    label: row.name,\n                    data: data,\n                    borderColor: row.color ? row.color : colors[i].borderColor,\n                    backgroundColor: row.color ? row.color : colors[i].backgroundColor,\n                })\n            })\n        }\n    }\n\n    const data = {\n        labels,\n        datasets: sets\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: 'x',\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        scales: {\n            x: {\n                stacked: true,\n            },\n            y: {\n                stacked: true,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Ordens de coleta por dia / status',\n            },\n        },\n    };\n\n    const labels = []\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                if (i === 0) {\n                    Object.values(row.data).map((r) => {\n                        labels.push(r.day)\n                    })\n\n                }\n            })\n        }\n    }\n\n    const sets = []\n\n    const colors = [\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n\n    ]\n\n    if (props.data) {\n        if (props.data.length > 0) {\n\n            props.data.map((row, i) => {\n\n                let data = []\n\n                Object.values(row.data).map((r) => {\n                    data.push(r.total)\n                })\n\n                sets.push({\n                    label: row.name,\n                    data: data,\n                    borderColor: row.color ? row.color : colors[i].borderColor,\n                    backgroundColor: row.color ? row.color : colors[i].backgroundColor,\n                })\n            })\n        }\n    }\n\n    const data = {\n        labels,\n        datasets: sets\n    };\n\n    return <Card>\n        <Card.Body>\n            <Bar height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n            mode: 'index',\n            intersect: false,\n        },\n        scales: {\n            y: {\n                type: 'linear',\n                display: true,\n                position: 'left',\n            },\n            y1: {\n                type: 'linear',\n                display: true,\n                position: 'right',\n                grid: {\n                    drawOnChartArea: false,\n                },\n            },\n        },\n        stacked: false,\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Ordens de coleta por mês / por tipo',\n            },\n        },\n    };\n    const labels = []\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                if (i === 0) {\n                    Object.keys(row.data).map((r) => {\n                        labels.push(r)\n                    })\n                }\n            })\n        }\n    }\n\n    const sets = []\n\n    const colors = [\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n\n    ]\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                let data = []\n\n                Object.values(row.data).map((r) => {\n                    data.push(r)\n                })\n\n                sets.push({\n                    label: row.name,\n                    data: data,\n                    borderColor: row.color ? row.color : colors[i].borderColor,\n                    backgroundColor: row.color ? row.color : colors[i].backgroundColor,\n                })\n            })\n        }\n    }\n\n    const data = {\n        labels,\n        datasets: sets\n    };\n\n    return <Card>\n        <Card.Body>\n            <Line height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Row, Col, Card, Dropdown, Badge, Spinner } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\r\nimport HtmlHead from 'components/html-head/HtmlHead';\r\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\r\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\r\nimport ChartCustomHorizontalTooltip from './chart/ChartCustomHorizontalTooltip';\r\nimport ChartSmallLine1 from './chart/ChartSmallLine1';\r\nimport ChartSmallLine2 from './chart/ChartSmallLine2';\r\nimport ChartSmallLine3 from './chart/ChartSmallLine3';\r\nimport ChartSmallLine4 from './chart/ChartSmallLine4';\r\nimport ChartBubble from './chart/ChartBubble';\r\nimport ChartSmallDoughnutChart1 from './chart/ChartSmallDoughnutChart1';\r\nimport ChartSmallDoughnutChart2 from './chart/ChartSmallDoughnutChart2';\r\nimport ChartSmallDoughnutChart3 from './chart/ChartSmallDoughnutChart3';\r\nimport ChartSmallDoughnutChart4 from './chart/ChartSmallDoughnutChart4';\r\nimport ChartSmallDoughnutChart5 from './chart/ChartSmallDoughnutChart5';\r\nimport ChartSmallDoughnutChart6 from './chart/ChartSmallDoughnutChart6';\r\nimport api from 'services/api';\r\nimport ChartLogsMonth from './chartLogsMonth';\r\nimport ChartLogsDays from './chartLogsDays';\r\nimport ChartOrdersMonth from './chartOrdersMonth';\r\nimport ChartOrdersDays from './chartOrdersDays';\r\nimport ChartNewOrganizationsMonth from './chartNewOrganizationsMonth';\r\nimport ChartNewOrganizationsDays from './chartNewOrganizationsDays';\r\nimport ChartOrdersByStatusMonth from './chartOrdersByStatusMonth';\r\nimport ChartOrdersByStatusDays from './chartOrdersByStatusDays';\r\nimport ChartOrdersByTypeMonth from './chartOrdersByTypeMonth';\r\n\r\nconst DashboardsAnalytic = () => {\r\n    const title = 'Analytic Dashboard';\r\n    const description = 'Analytic Dashboard';\r\n\r\n    const breadcrumbs = [\r\n        { to: '', text: 'Home' },\r\n        { to: 'dashboards', text: 'Dashboards' },\r\n    ]\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [accessMonth, setAccessMonth] = useState(false)\r\n    const [accessDays, setAccessDays] = useState(false)\r\n    const [ordersMonth, setOrdersMonth] = useState(false)\r\n    const [ordersDays, setOrdersDays] = useState(false)\r\n    const [organizationsMonth, setOrganizationsMonth] = useState(false)\r\n    const [organizationsDays, setOrganizationsDays] = useState(false)\r\n    const [ordersByStatusMonth, setOrdersByStatusMonth] = useState(false)\r\n    const [ordersByStatusDays, setOrdersByStatusDays] = useState(false)\r\n    const [ordersByTypeMonth, setOrdersByTypeMonth] = useState(false)\r\n    // const [ordersByTypeDays, setOrdersByTypeDays] = useState(false)\r\n\r\n\r\n    const loadDashboard = async () => {\r\n        setLoading(true)\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/access`)\r\n\r\n            let data_name = Object.keys(response.data)\r\n            let data_value = Object.values(response.data)\r\n\r\n            setAccessMonth({\r\n                label: data_name,\r\n                values: data_value\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/access?format=days`)\r\n\r\n            let data_labels = []\r\n            let data_values = []\r\n\r\n            response.data.map((row) => {\r\n                data_labels.push(row.day)\r\n                data_values.push(row.total)\r\n            })\r\n\r\n            setAccessDays({\r\n                label: data_labels,\r\n                values: data_values\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/new_orders`)\r\n\r\n            let data_name = Object.keys(response.data)\r\n            let data_value = Object.values(response.data)\r\n\r\n            setOrdersMonth({\r\n                label: data_name,\r\n                values: data_value\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/new_orders?format=days`)\r\n\r\n            let data_labels = []\r\n            let data_values = []\r\n\r\n            response.data.map((row) => {\r\n                data_labels.push(row.day)\r\n                data_values.push(row.total)\r\n            })\r\n\r\n            setOrdersDays({\r\n                label: data_labels,\r\n                values: data_values\r\n            })\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/new_organizations`)\r\n\r\n            let data_name = Object.keys(response.data)\r\n            let data_value = Object.values(response.data)\r\n\r\n            setOrganizationsMonth({\r\n                label: data_name,\r\n                values: data_value\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/new_organizations?format=days`)\r\n\r\n            let data_labels = []\r\n            let data_values = []\r\n\r\n            // eslint-disable-next-line array-callback-return\r\n            response.data.map((row) => {\r\n                data_labels.push(row.day)\r\n                data_values.push(row.total)\r\n            })\r\n\r\n\r\n            setOrganizationsDays({\r\n                label: data_labels,\r\n                values: data_values\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/orders_by_status`)\r\n            setOrdersByStatusMonth(response.data)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/orders_by_status?format=days`)\r\n            setOrdersByStatusDays(response.data)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n        try {\r\n            const response = await api.get(`/api/v1/private/dashboard/orders_by_type`)\r\n            setOrdersByTypeMonth(response.data)\r\n        } catch (error) {\r\n        }\r\n\r\n        // try {\r\n        //     const response = await api.get(`/api/v1/private/dashboard/orders_by_type?format=days`)\r\n        //     setOrdersByTypeDays(response.data)\r\n        // } catch (error) {\r\n        // }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDashboard()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <HtmlHead title={title} description={description} />\r\n            {/* Title and Top Buttons Start */}\r\n            <div className=\"page-title-container\">\r\n                <Row>\r\n                    {/* Title Start */}\r\n                    <Col md=\"7\">\r\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\r\n                        <BreadcrumbList items={breadcrumbs} />\r\n                    </Col>\r\n                    {/* Title End */}\r\n                </Row>\r\n            </div>\r\n            {/* Title and Top Buttons End */}\r\n\r\n            {loading\r\n                ? <>\r\n                    <div className=\"align-items-center\">\r\n                        <Spinner as=\"span\" animation=\"border\" size=\"md\" />\r\n\r\n                        <div>Carregando...</div>\r\n                    </div>\r\n                </>\r\n                : <>\r\n                    <Row className=\"g-2 mt-4\">\r\n                        <Col sm=\"6\">\r\n                            {!loading\r\n                                ? <ChartLogsMonth data={accessMonth} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n                        <Col sm=\"6\">\r\n                            {!loading\r\n                                ? <ChartLogsDays data={accessDays} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n\r\n                        <Col sm=\"12\">\r\n                            {!loading\r\n                                ? <ChartOrdersByStatusMonth data={ordersByStatusMonth} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n\r\n                        <Col sm=\"6\">\r\n                            {!loading\r\n                                ? <ChartOrdersMonth data={ordersMonth} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n\r\n                        <Col sm=\"6\">\r\n                            {!loading\r\n                                ? <ChartOrdersDays data={ordersDays} />\r\n                                : <></>\r\n                            }\r\n                        </Col>\r\n\r\n                        <Col sm=\"12\">\r\n                            {!loading\r\n                                ? <ChartOrdersByStatusDays data={ordersByStatusDays} />\r\n                                : <></>\r\n                            }\r\n                        </Col>\r\n\r\n                        <Col sm=\"12\">\r\n                            {!loading\r\n                                ? <ChartOrdersByTypeMonth data={ordersByTypeMonth} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n\r\n                        <Col sm=\"6\">\r\n                            {!loading\r\n                                ? <ChartNewOrganizationsMonth data={organizationsMonth} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n\r\n                        <Col sm=\"6\">\r\n                            {!loading\r\n                                ? <ChartNewOrganizationsDays data={organizationsDays} />\r\n                                : <></>\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            }\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DashboardsAnalytic;\r\n","import React from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_PATHS } from 'config.js';\n\nconst BreadcrumbList = ({ items = [{ to: '/', text: 'Home' }], basePath = DEFAULT_PATHS.APP }) => {\n  return (\n    <Breadcrumb className=\"breadcrumb-container d-inline-block\">\n      {items.map((breadcrumb, bIndex) => (\n        <Breadcrumb.Item key={`breadCrumb.${bIndex}`} linkAs={Link} linkProps={{ to: `${basePath}${breadcrumb.to}` }}>\n          {breadcrumb.title || breadcrumb.text}\n        </Breadcrumb.Item>\n      ))}\n    </Breadcrumb>\n  );\n};\nexport default BreadcrumbList;\n","import axios from \"axios\";\r\nimport { APP_URL } from \"config\";\r\nimport { API_URL } from \"config\";\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL\r\n})\r\n\r\n\r\nlet data = JSON.parse(localStorage.getItem('persist:portal-vawlog'))\r\ndata = JSON.parse(data.auth)\r\n\r\n\r\napi.interceptors.request.use(async config => {\r\n\r\n    if (data.currentUser.token) {\r\n        config.headers.Authorization = `Bearer ${data.currentUser.token}`\r\n    }\r\n\r\n    return config\r\n})\r\n\r\napi.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response.data.error === 'Unauthenticated.') {\r\n            window.location.href= `${APP_URL}/login`\r\n        }\r\n    })\r\n\r\nexport default api"],"sourceRoot":""}