{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { SERVICE_URL } from 'config.js';\nconst initialState = {\n  status: 'idle',\n  items: []\n};\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    notificationsLoading(state) {\n      state.status = 'loading';\n    },\n    notificationsLoaded(state, action) {\n      state.items = action.payload;\n      state.status = 'idle';\n    }\n  }\n});\nexport const {\n  notificationsLoading,\n  notificationsLoaded\n} = notificationSlice.actions;\nexport const fetchNotifications = () => async dispatch => {\n  dispatch(notificationsLoading());\n  const response = await axios.get(`${SERVICE_URL}/notifications`);\n  dispatch(notificationsLoaded(response.data));\n};\nconst notificationReducer = notificationSlice.reducer;\nexport default notificationReducer;","map":{"version":3,"names":["createSlice","axios","SERVICE_URL","initialState","status","items","notificationSlice","name","reducers","notificationsLoading","state","notificationsLoaded","action","payload","actions","fetchNotifications","dispatch","response","get","data","notificationReducer","reducer"],"sources":["/Users/caio/Projects/Samples/front-vawlog/src/layout/nav/notifications/notificationSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { SERVICE_URL } from 'config.js';\n\nconst initialState = {\n  status: 'idle',\n  items: [],\n};\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    notificationsLoading(state) {\n      state.status = 'loading';\n    },\n    notificationsLoaded(state, action) {\n      state.items = action.payload;\n      state.status = 'idle';\n    },\n  },\n});\n\nexport const { notificationsLoading, notificationsLoaded } = notificationSlice.actions;\n\nexport const fetchNotifications = () => async (dispatch) => {\n  dispatch(notificationsLoading());\n  const response = await axios.get(`${SERVICE_URL}/notifications`);\n  dispatch(notificationsLoaded(response.data));\n};\n\nconst notificationReducer = notificationSlice.reducer;\nexport default notificationReducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,WAAW;AAEvC,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,MAAM;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,iBAAiB,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,cAAc;EACpBJ,YAAY;EACZK,QAAQ,EAAE;IACRC,oBAAoB,CAACC,KAAK,EAAE;MAC1BA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC1B,CAAC;IACDO,mBAAmB,CAACD,KAAK,EAAEE,MAAM,EAAE;MACjCF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACN,MAAM,GAAG,MAAM;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,oBAAoB;EAAEE;AAAoB,CAAC,GAAGL,iBAAiB,CAACQ,OAAO;AAEtF,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC1DA,QAAQ,CAACP,oBAAoB,EAAE,CAAC;EAChC,MAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,GAAEhB,WAAY,gBAAe,CAAC;EAChEc,QAAQ,CAACL,mBAAmB,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC;AAC9C,CAAC;AAED,MAAMC,mBAAmB,GAAGd,iBAAiB,CAACe,OAAO;AACrD,eAAeD,mBAAmB"},"metadata":{},"sourceType":"module"}