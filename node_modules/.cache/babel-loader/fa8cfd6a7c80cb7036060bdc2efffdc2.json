{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.concat\");\nrequire(\"core-js/modules/es.array.index-of\");\nrequire(\"core-js/modules/es.array.reduce\");\nrequire(\"core-js/modules/es.object.keys\");\nrequire(\"core-js/modules/es.object.to-string\");\nrequire(\"core-js/modules/es.promise\");\nrequire(\"core-js/modules/web.dom-collections.for-each\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createPersistoid;\nvar _constants = require(\"./constants\");\n\n// @TODO remove once flow < 0.63 support is no longer required.\nfunction createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var serialize;\n  if (config.serialize === false) {\n    serialize = function serialize(x) {\n      return x;\n    };\n  } else if (typeof config.serialize === 'function') {\n    serialize = config.serialize;\n  } else {\n    serialize = defaultSerialize;\n  }\n  var writeFailHandler = config.writeFailHandler || null; // initialize stateful values\n\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n\n      keysToProcess.push(key); // add key to queue\n    }); //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined && passWhitelistBlacklist(key) && keysToProcess.indexOf(key) === -1 && lastState[key] !== undefined) {\n        keysToProcess.push(key);\n      }\n    }); // start the time iterator if not running (read: throttle)\n\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n    lastState = state;\n  };\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer[\"in\"](subState, key, lastState);\n    }, lastState[key]);\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('reduxjs-toolkit-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n    writePromise = storage.setItem(storageKey, serialize(stagedState))[\"catch\"](onWriteFail);\n  }\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (writeFailHandler) writeFailHandler(err);\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n    return writePromise || Promise.resolve();\n  }; // return `persistoid`\n\n  return {\n    update: update,\n    flush: flush\n  };\n} // @NOTE in the future this may be exposed via config\n\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createPersistoid","_constants","require","config","blacklist","whitelist","transforms","throttle","storageKey","concat","keyPrefix","undefined","KEY_PREFIX","key","storage","serialize","x","defaultSerialize","writeFailHandler","lastState","stagedState","keysToProcess","timeIterator","writePromise","update","state","keys","forEach","passWhitelistBlacklist","indexOf","push","setInterval","processNextKey","length","clearInterval","shift","endState","reduce","subState","transformer","err","console","error","writeStagedState","setItem","onWriteFail","process","env","NODE_ENV","flush","Promise","resolve","data","JSON","stringify"],"sources":["/Users/caio/Projects/Samples/front-vawlog/node_modules/reduxjs-toolkit-persist/es/createPersistoid.js"],"sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.object.define-property.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createPersistoid;\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.for-each.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.array.index-of.js\");\n\nrequire(\"core-js/modules/web.timers.js\");\n\nrequire(\"core-js/modules/es.array.reduce.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.promise.js\");\n\nvar _constants = require(\"./constants\");\n\n// @TODO remove once flow < 0.63 support is no longer required.\nfunction createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : _constants.KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var serialize;\n\n  if (config.serialize === false) {\n    serialize = function serialize(x) {\n      return x;\n    };\n  } else if (typeof config.serialize === 'function') {\n    serialize = config.serialize;\n  } else {\n    serialize = defaultSerialize;\n  }\n\n  var writeFailHandler = config.writeFailHandler || null; // initialize stateful values\n\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n\n      keysToProcess.push(key); // add key to queue\n    }); //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined && passWhitelistBlacklist(key) && keysToProcess.indexOf(key) === -1 && lastState[key] !== undefined) {\n        keysToProcess.push(key);\n      }\n    }); // start the time iterator if not running (read: throttle)\n\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n\n    lastState = state;\n  };\n\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer[\"in\"](subState, key, lastState);\n    }, lastState[key]);\n\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('reduxjs-toolkit-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n    writePromise = storage.setItem(storageKey, serialize(stagedState))[\"catch\"](onWriteFail);\n  }\n\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (writeFailHandler) writeFailHandler(err);\n\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n\n    return writePromise || Promise.resolve();\n  }; // return `persistoid`\n\n\n  return {\n    update: update,\n    flush: flush\n  };\n} // @NOTE in the future this may be exposed via config\n\n\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}