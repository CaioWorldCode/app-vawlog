{"ast":null,"code":"import _classCallCheck from \"/Users/caio/Projects/Samples/front-vawlog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/caio/Projects/Samples/front-vawlog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/caio/Projects/Samples/front-vawlog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/caio/Projects/Samples/front-vawlog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React, { Component } from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nvar OverlayScrollbarsComponent = /*#__PURE__*/function (_Component) {\n  _inherits(OverlayScrollbarsComponent, _Component);\n  var _super = _createSuper(OverlayScrollbarsComponent);\n  function OverlayScrollbarsComponent(props) {\n    var _this;\n    _classCallCheck(this, OverlayScrollbarsComponent);\n    _this = _super.call(this, props);\n    _this._osInstance = null;\n    _this._osTargetRef = React.createRef();\n    return _this;\n  }\n  _createClass(OverlayScrollbarsComponent, [{\n    key: \"osInstance\",\n    value: function osInstance() {\n      return this._osInstance;\n    }\n  }, {\n    key: \"osTarget\",\n    value: function osTarget() {\n      return this._osTargetRef.current || null;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n      mergeHostClassNames(this._osInstance, this.props.className);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (OverlayScrollbars.valid(this._osInstance)) {\n        this._osInstance.destroy();\n        this._osInstance = null;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (OverlayScrollbars.valid(this._osInstance)) {\n        this._osInstance.options(this.props.options);\n        if (prevProps.className !== this.props.className) {\n          mergeHostClassNames(this._osInstance, this.props.className);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n        divProps = __rest(_a, [\"options\", \"extensions\", \"children\", \"className\"]);\n      return React.createElement(\"div\", Object.assign({\n        className: \"os-host\"\n      }, divProps, {\n        ref: this._osTargetRef\n      }), React.createElement(\"div\", {\n        className: \"os-resize-observer-host\"\n      }), React.createElement(\"div\", {\n        className: \"os-padding\"\n      }, React.createElement(\"div\", {\n        className: \"os-viewport\"\n      }, React.createElement(\"div\", {\n        className: \"os-content\"\n      }, this.props.children))), React.createElement(\"div\", {\n        className: \"os-scrollbar os-scrollbar-horizontal \"\n      }, React.createElement(\"div\", {\n        className: \"os-scrollbar-track\"\n      }, React.createElement(\"div\", {\n        className: \"os-scrollbar-handle\"\n      }))), React.createElement(\"div\", {\n        className: \"os-scrollbar os-scrollbar-vertical\"\n      }, React.createElement(\"div\", {\n        className: \"os-scrollbar-track\"\n      }, React.createElement(\"div\", {\n        className: \"os-scrollbar-handle\"\n      }))), React.createElement(\"div\", {\n        className: \"os-scrollbar-corner\"\n      }));\n    }\n  }]);\n  return OverlayScrollbarsComponent;\n}(Component);\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n      host = _osInstance$getElemen.host;\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, \"$|\"), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\nexport { OverlayScrollbarsComponent };","map":{"version":3,"sources":["../src/OverlayScrollbarsComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}"]},"metadata":{},"sourceType":"module"}