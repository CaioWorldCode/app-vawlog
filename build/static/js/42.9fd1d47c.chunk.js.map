{"version":3,"sources":["views/organizations/denied.js","components/breadcrumb-list/BreadcrumbList.js","services/api.js"],"names":["Component","title","description","className","md","items","to","text","xs","xxl","sm","Body","icon","size","BreadcrumbList","basePath","DEFAULT_PATHS","APP","map","breadcrumb","bIndex","Item","linkAs","Link","linkProps","api","axios","create","baseURL","API_URL","data","JSON","parse","localStorage","getItem","auth","interceptors","request","use","config","currentUser","token","headers","Authorization","response","error","window","location","href","APP_URL"],"mappings":"mHAAA,sGA4DeA,UAlDG,WACd,IAAMC,EAAQ,SAOd,OACI,qCACI,cAAC,IAAQ,CAACA,MAAOA,EAAOC,YARZ,WAUZ,qBAAKC,UAAU,uBAAsB,SACjC,cAAC,IAAG,UAEA,eAAC,IAAG,CAACC,GAAG,IAAG,UACP,oBAAID,UAAU,sBAAqB,SAAEF,IACrC,cAAC,IAAc,CAACI,MAbhB,CAChB,CAAEC,GAAI,GAAIC,KAAM,kBAmBZ,cAAC,IAAG,CAACJ,UAAU,OAAM,SACjB,cAAC,IAAG,CAACK,GAAI,GAAIC,IAAK,GAAG,SACjB,cAAC,IAAG,CAACN,UAAU,WAAU,SACrB,cAAC,IAAG,CAACO,GAAG,KAAKD,IAAI,KAAI,SACjB,cAAC,IAAI,CAACN,UAAU,QAAO,SACnB,eAAC,IAAKQ,KAAI,CAACR,UAAU,2EAA0E,UAC3F,cAAC,IAAW,CAACS,KAAK,gBAAgBT,UAAU,cAAcU,KAAM,KAChE,mBAAGV,UAAU,eAAc,SAAC,mBAI5B,mBAAGA,UAAU,8BAA6B,SAAC,gK,iCC7C/E,wCAgBeW,IAXQ,SAAH,GAA+E,IAAD,IAAxET,aAAK,MAAG,CAAC,CAAEC,GAAI,IAAKC,KAAM,SAAS,MAAEQ,gBAAQ,MAAGC,IAAcC,IAAG,EACzF,OACE,cAAC,IAAU,CAACd,UAAU,sCAAqC,SACxDE,EAAMa,KAAI,SAACC,EAAYC,GAAM,OAC5B,cAAC,IAAWC,KAAI,CAA8BC,OAAQC,IAAMC,UAAW,CAAElB,GAAG,GAAD,OAAKS,GAAQ,OAAGI,EAAWb,KAAO,SAC1Ga,EAAWlB,OAASkB,EAAWZ,MAAI,qBADFa,W,sFCLtCK,EAAMC,IAAMC,OAAO,CACrBC,QAASC,MAITC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,yBAC3CJ,EAAOC,KAAKC,MAAMF,EAAKK,MAGvBV,EAAIW,aAAaC,QAAQC,IAAG,uCAAC,WAAMC,GAAM,iEAIpC,OAFGT,EAAKU,YAAYC,QACjBF,EAAOG,QAAQC,cAAa,iBAAab,EAAKU,YAAYC,QAC7D,kBAEMF,GAAM,2CAChB,mDAP2B,IAS5Bd,EAAIW,aAAaQ,SAASN,KACtB,SAAAM,GAAQ,OAAIA,KACZ,SAAAC,GACsC,qBAA9BA,EAAMD,SAASd,KAAKe,QACpBC,OAAOC,SAASC,KAAK,GAAD,OAAKC,IAAO,cAI7BxB","file":"static/js/42.9fd1d47c.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Spinner, Dropdown, InputGroup, FormControl, Card, Alert, Button, Modal, Form as FormBootstrap } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport api from 'services/api';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { Field, Form, Formik } from 'formik';\nimport Swal from 'sweetalert2'\n\n\nconst Component = () => {\n    const title = 'Negado';\n    const description = 'Negado';\n\n    const breadcrumbs = [\n        { to: '', text: 'Home' },\n    ]\n\n    return (\n        <>\n            <HtmlHead title={title} description={description} />\n            {/* Title and Top Buttons Start */}\n            <div className=\"page-title-container\">\n                <Row>\n                    {/* Title Start */}\n                    <Col md=\"7\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </Col>\n                    {/* Title End */}\n                </Row>\n            </div>\n            {/* Title and Top Buttons End */}\n\n            <Row className='mt-5'>\n                <Col xs={12} xxl={12}>\n                    <Row className=\"g-2 mb-5\">\n                        <Col sm=\"12\" xxl=\"12\">\n                            <Card className=\"sh-19\">\n                                <Card.Body className=\"text-center d-flex flex-column justify-content-center align-items-center\">\n                                    <CsLineIcons icon=\"error-hexagon\" className=\"text-danger\" size={45} />\n                                    <p className=\"heading mb-0\">\n                                        Acesso negado!\n                                    </p>\n\n                                    <p className=\"text-medium mb-4 text-muted\">\n                                        Você não possui permissão para acessar este conteúdo, entre em contato com o administrador do sistemas para solicitar acesso.\n                                    </p>\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n\n\n        </>\n    );\n};\n\nexport default Component;\n","import React from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_PATHS } from 'config.js';\n\nconst BreadcrumbList = ({ items = [{ to: '/', text: 'Home' }], basePath = DEFAULT_PATHS.APP }) => {\n  return (\n    <Breadcrumb className=\"breadcrumb-container d-inline-block\">\n      {items.map((breadcrumb, bIndex) => (\n        <Breadcrumb.Item key={`breadCrumb.${bIndex}`} linkAs={Link} linkProps={{ to: `${basePath}${breadcrumb.to}` }}>\n          {breadcrumb.title || breadcrumb.text}\n        </Breadcrumb.Item>\n      ))}\n    </Breadcrumb>\n  );\n};\nexport default BreadcrumbList;\n","import axios from \"axios\";\r\nimport { APP_URL } from \"config\";\r\nimport { API_URL } from \"config\";\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL\r\n})\r\n\r\n\r\nlet data = JSON.parse(localStorage.getItem('persist:portal-vawlog'))\r\ndata = JSON.parse(data.auth)\r\n\r\n\r\napi.interceptors.request.use(async config => {\r\n\r\n    if (data.currentUser.token) {\r\n        config.headers.Authorization = `Bearer ${data.currentUser.token}`\r\n    }\r\n\r\n    return config\r\n})\r\n\r\napi.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n        if (error.response.data.error === 'Unauthenticated.') {\r\n            window.location.href= `${APP_URL}/login`\r\n        }\r\n    })\r\n\r\nexport default api"],"sourceRoot":""}