{"ast":null,"code":"var _jsxFileName = \"/Users/caio/Projects/Samples/front-vawlog/src/views/home/chartOrdersByTypeMonth.js\";\nimport React from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n  const options = {\n    responsive: true,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    scales: {\n      y: {\n        type: 'linear',\n        display: true,\n        position: 'left'\n      },\n      y1: {\n        type: 'linear',\n        display: true,\n        position: 'right',\n        grid: {\n          drawOnChartArea: false\n        }\n      }\n    },\n    stacked: false,\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'bottom'\n      },\n      title: {\n        display: true,\n        text: 'Ordens de coleta por mês / por tipo'\n      }\n    }\n  };\n  const labels = [];\n  if (props.data) {\n    if (props.data.length > 0) {\n      props.data.map((row, i) => {\n        if (i === 0) {\n          Object.keys(row.data).map(r => {\n            labels.push(r);\n          });\n        }\n      });\n    }\n  }\n  const sets = [];\n  const colors = [{\n    borderColor: 'rgb(31, 138, 112)',\n    backgroundColor: 'rgba(31, 138, 112, 0.5)'\n  }, {\n    borderColor: 'rgb(252, 115, 0)',\n    backgroundColor: 'rgba(252, 115, 0, 0.5)'\n  }, {\n    borderColor: 'rgb(191, 219, 56)',\n    backgroundColor: 'rgba(191, 219, 56, 0.5)'\n  }, {\n    borderColor: 'rgb(0, 51, 124)',\n    backgroundColor: 'rgba(0, 51, 124, 0.5)'\n  }, {\n    borderColor: 'rgb(255, 234, 32)',\n    backgroundColor: 'rgba(255, 234, 32, 0.5)'\n  }, {\n    borderColor: 'rgb(252, 41, 71)',\n    backgroundColor: 'rgba(252, 41, 71, 0.5)'\n  }, {\n    borderColor: 'rgb(113, 73, 198)',\n    backgroundColor: 'rgba(113, 73, 198, 0.5)'\n  }, {\n    borderColor: 'rgb(31, 138, 112)',\n    backgroundColor: 'rgba(31, 138, 112, 0.5)'\n  }, {\n    borderColor: 'rgb(252, 115, 0)',\n    backgroundColor: 'rgba(252, 115, 0, 0.5)'\n  }, {\n    borderColor: 'rgb(191, 219, 56)',\n    backgroundColor: 'rgba(191, 219, 56, 0.5)'\n  }, {\n    borderColor: 'rgb(0, 51, 124)',\n    backgroundColor: 'rgba(0, 51, 124, 0.5)'\n  }, {\n    borderColor: 'rgb(255, 234, 32)',\n    backgroundColor: 'rgba(255, 234, 32, 0.5)'\n  }, {\n    borderColor: 'rgb(252, 41, 71)',\n    backgroundColor: 'rgba(252, 41, 71, 0.5)'\n  }, {\n    borderColor: 'rgb(113, 73, 198)',\n    backgroundColor: 'rgba(113, 73, 198, 0.5)'\n  }];\n  if (props.data) {\n    if (props.data.length > 0) {\n      props.data.map((row, i) => {\n        let data = [];\n        Object.values(row.data).map(r => {\n          data.push(r);\n        });\n        sets.push({\n          label: row.name,\n          data: data,\n          borderColor: colors[i].borderColor,\n          backgroundColor: colors[i].backgroundColor\n        });\n      });\n    }\n  }\n  const data = {\n    labels,\n    datasets: sets\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        height: 300,\n        options: options,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","Card","register","props","options","responsive","interaction","mode","intersect","scales","y","type","display","position","y1","grid","drawOnChartArea","stacked","elements","bar","borderWidth","plugins","legend","title","text","labels","data","length","map","row","i","Object","keys","r","push","sets","colors","borderColor","backgroundColor","values","label","name","datasets"],"sources":["/Users/caio/Projects/Samples/front-vawlog/src/views/home/chartOrdersByTypeMonth.js"],"sourcesContent":["import React from 'react';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { Card } from 'react-bootstrap';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (props) {\n    const options = {\n        responsive: true,\n        interaction: {\n            mode: 'index',\n            intersect: false,\n        },\n        scales: {\n            y: {\n                type: 'linear',\n                display: true,\n                position: 'left',\n            },\n            y1: {\n                type: 'linear',\n                display: true,\n                position: 'right',\n                grid: {\n                    drawOnChartArea: false,\n                },\n            },\n        },\n        stacked: false,\n        elements: {\n            bar: {\n                borderWidth: 2,\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n            },\n            title: {\n                display: true,\n                text: 'Ordens de coleta por mês / por tipo',\n            },\n        },\n    };\n    const labels = []\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                if (i === 0) {\n                    Object.keys(row.data).map((r) => {\n                        labels.push(r)\n                    })\n                }\n            })\n        }\n    }\n\n    const sets = []\n\n    const colors = [\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n        {\n            borderColor: 'rgb(31, 138, 112)',\n            backgroundColor: 'rgba(31, 138, 112, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 115, 0)',\n            backgroundColor: 'rgba(252, 115, 0, 0.5)'\n        },\n        {\n            borderColor: 'rgb(191, 219, 56)',\n            backgroundColor: 'rgba(191, 219, 56, 0.5)'\n        },\n        {\n            borderColor: 'rgb(0, 51, 124)',\n            backgroundColor: 'rgba(0, 51, 124, 0.5)'\n        },\n        {\n            borderColor: 'rgb(255, 234, 32)',\n            backgroundColor: 'rgba(255, 234, 32, 0.5)'\n        },\n        {\n            borderColor: 'rgb(252, 41, 71)',\n            backgroundColor: 'rgba(252, 41, 71, 0.5)'\n        },\n        {\n            borderColor: 'rgb(113, 73, 198)',\n            backgroundColor: 'rgba(113, 73, 198, 0.5)'\n        },\n\n    ]\n\n    if (props.data) {\n        if (props.data.length > 0) {\n            props.data.map((row, i) => {\n                let data = []\n\n                Object.values(row.data).map((r) => {\n                    data.push(r)\n                })\n\n                sets.push({\n                    label: row.name,\n                    data: data,\n                    borderColor: colors[i].borderColor,\n                    backgroundColor: colors[i].backgroundColor,\n                })\n            })\n        }\n    }\n\n    const data = {\n        labels,\n        datasets: sets\n    };\n\n    return <Card>\n        <Card.Body>\n            <Line height={300} options={options} data={data} />\n        </Card.Body>\n    </Card>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}