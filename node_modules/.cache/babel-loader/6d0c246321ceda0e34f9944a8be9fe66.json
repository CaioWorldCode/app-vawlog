{"ast":null,"code":"var _jsxFileName = \"/Users/caio/Projects/Samples/front-vawlog/src/layout/nav/notifications/Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport { fetchNotifications } from './notificationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationsDropdownToggle = /*#__PURE__*/React.memo(_c2 = /*#__PURE__*/React.forwardRef(_c = (_ref, ref) => {\n  let {\n    onClick,\n    expanded = false\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    ref: ref,\n    href: \"#/\",\n    className: \"notification-button\",\n    \"data-toggle\": \"dropdown\",\n    \"aria-expanded\": expanded,\n    onClick: e => {\n      e.preventDefault();\n      e.stopPropagation();\n      onClick(e);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative d-inline-flex\",\n      children: [/*#__PURE__*/_jsxDEV(CsLineIcons, {\n        icon: \"bell\",\n        size: \"18\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"position-absolute notification-dot rounded-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}));\n_c3 = NotificationsDropdownToggle;\nconst NotificationItem = _ref2 => {\n  let {\n    img = '',\n    link = '',\n    detail = ''\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"mb-3 pb-3 border-bottom border-separator-light d-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      className: \"me-3 sw-4 sh-4 rounded-xl align-self-center\",\n      alt: \"notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-self-center\",\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: link,\n        activeClassName: \"\",\n        children: detail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_c4 = NotificationItem;\nconst NotificationsDropdownMenu = /*#__PURE__*/React.memo(_c6 = /*#__PURE__*/React.forwardRef(_c5 = (_ref3, ref) => {\n  let {\n    style,\n    className,\n    labeledBy,\n    items\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: style,\n    className: classNames('wide notification-dropdown scroll-out', className),\n    \"aria-labelledby\": labeledBy,\n    children: /*#__PURE__*/_jsxDEV(OverlayScrollbarsComponent, {\n      options: {\n        scrollbars: {\n          autoHide: 'leave',\n          autoHideDelay: 600\n        },\n        overflowBehavior: {\n          x: 'hidden',\n          y: 'scroll'\n        }\n      },\n      className: \"scroll\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled border-last-none\",\n        children: items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(NotificationItem, {\n          detail: item.detail,\n          link: item.link,\n          img: item.img\n        }, `notificationItem.${itemIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}));\n_c7 = NotificationsDropdownMenu;\nNotificationsDropdownMenu.displayName = 'NotificationsDropdownMenu';\nconst MENU_NAME = 'Notifications';\nconst Notifications = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    placementStatus: {\n      view: placement\n    },\n    behaviourStatus: {\n      behaviourHtmlData\n    },\n    attrMobile,\n    attrMenuAnimate\n  } = useSelector(state => state.menu);\n  const {\n    color\n  } = useSelector(state => state.settings);\n  const {\n    items\n  } = useSelector(state => state.notification);\n  const {\n    showingNavMenu\n  } = useSelector(state => state.layout);\n  useEffect(() => {\n    dispatch(fetchNotifications());\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n  const onToggle = (status, event) => {\n    if (event && event.stopPropagation) event.stopPropagation();else if (event && event.originalEvent && event.originalEvent.stopPropagation) event.originalEvent.stopPropagation();\n    dispatch(layoutShowingNavMenu(status ? MENU_NAME : ''));\n  };\n  useEffect(() => {\n    dispatch(layoutShowingNavMenu(''));\n    // eslint-disable-next-line\n  }, [attrMenuAnimate, behaviourHtmlData, attrMobile, color]);\n  if (items && items.length > 0) {\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      as: \"li\",\n      bsPrefix: \"list-inline-item\",\n      onToggle: onToggle,\n      show: showingNavMenu === MENU_NAME,\n      align: placement === MENU_PLACEMENT.Horizontal ? 'end' : 'start',\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        as: NotificationsDropdownToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        as: NotificationsDropdownMenu,\n        items: items,\n        popperConfig: {\n          modifiers: [{\n            name: 'offset',\n            options: {\n              offset: () => {\n                if (placement === MENU_PLACEMENT.Horizontal) {\n                  return [0, 7];\n                }\n                if (window.innerWidth < 768) {\n                  return [-168, 7];\n                }\n                return [-162, 7];\n              }\n            }\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Notifications, \"y8YbtY4XFROw2HBdHxmZSgvA4Gk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c8 = Notifications;\nexport default _c9 = /*#__PURE__*/React.memo(Notifications);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"NotificationsDropdownToggle$React.memo$React.forwardRef\");\n$RefreshReg$(_c2, \"NotificationsDropdownToggle$React.memo\");\n$RefreshReg$(_c3, \"NotificationsDropdownToggle\");\n$RefreshReg$(_c4, \"NotificationItem\");\n$RefreshReg$(_c5, \"NotificationsDropdownMenu$React.memo$React.forwardRef\");\n$RefreshReg$(_c6, \"NotificationsDropdownMenu$React.memo\");\n$RefreshReg$(_c7, \"NotificationsDropdownMenu\");\n$RefreshReg$(_c8, \"Notifications\");\n$RefreshReg$(_c9, \"%default%\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","NavLink","Dropdown","classNames","OverlayScrollbarsComponent","MENU_PLACEMENT","CsLineIcons","layoutShowingNavMenu","fetchNotifications","NotificationsDropdownToggle","memo","forwardRef","ref","onClick","expanded","e","preventDefault","stopPropagation","NotificationItem","img","link","detail","NotificationsDropdownMenu","style","className","labeledBy","items","scrollbars","autoHide","autoHideDelay","overflowBehavior","x","y","map","item","itemIndex","displayName","MENU_NAME","Notifications","dispatch","placementStatus","view","placement","behaviourStatus","behaviourHtmlData","attrMobile","attrMenuAnimate","state","menu","color","settings","notification","showingNavMenu","layout","onToggle","status","event","originalEvent","length","Horizontal","modifiers","name","options","offset","window","innerWidth"],"sources":["/Users/caio/Projects/Samples/front-vawlog/src/layout/nav/notifications/Notifications.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport { fetchNotifications } from './notificationSlice';\n\nconst NotificationsDropdownToggle = React.memo(\n  React.forwardRef(({ onClick, expanded = false }, ref) => (\n    <a\n      ref={ref}\n      href=\"#/\"\n      className=\"notification-button\"\n      data-toggle=\"dropdown\"\n      aria-expanded={expanded}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n    >\n      <div className=\"position-relative d-inline-flex\">\n        <CsLineIcons icon=\"bell\" size=\"18\" />\n        <span className=\"position-absolute notification-dot rounded-xl\" />\n      </div>\n    </a>\n  ))\n);\nconst NotificationItem = ({ img = '', link = '', detail = '' }) => (\n  <li className=\"mb-3 pb-3 border-bottom border-separator-light d-flex\">\n    <img src={img} className=\"me-3 sw-4 sh-4 rounded-xl align-self-center\" alt=\"notification\" />\n    <div className=\"align-self-center\">\n      <NavLink to={link} activeClassName=\"\">\n        {detail}\n      </NavLink>\n    </div>\n  </li>\n);\n\nconst NotificationsDropdownMenu = React.memo(\n  React.forwardRef(({ style, className, labeledBy, items }, ref) => {\n    return (\n      <div ref={ref} style={style} className={classNames('wide notification-dropdown scroll-out', className)} aria-labelledby={labeledBy}>\n        <OverlayScrollbarsComponent\n          options={{\n            scrollbars: { autoHide: 'leave', autoHideDelay: 600 },\n            overflowBehavior: { x: 'hidden', y: 'scroll' },\n          }}\n          className=\"scroll\"\n        >\n          <ul className=\"list-unstyled border-last-none\">\n            {items.map((item, itemIndex) => (\n              <NotificationItem key={`notificationItem.${itemIndex}`} detail={item.detail} link={item.link} img={item.img} />\n            ))}\n          </ul>\n        </OverlayScrollbarsComponent>\n      </div>\n    );\n  })\n);\nNotificationsDropdownMenu.displayName = 'NotificationsDropdownMenu';\n\nconst MENU_NAME = 'Notifications';\nconst Notifications = () => {\n  const dispatch = useDispatch();\n\n  const {\n    placementStatus: { view: placement },\n    behaviourStatus: { behaviourHtmlData },\n    attrMobile,\n    attrMenuAnimate,\n  } = useSelector((state) => state.menu);\n  const { color } = useSelector((state) => state.settings);\n  const { items } = useSelector((state) => state.notification);\n  const { showingNavMenu } = useSelector((state) => state.layout);\n\n  useEffect(() => {\n    dispatch(fetchNotifications());\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n\n  const onToggle = (status, event) => {\n    if (event && event.stopPropagation) event.stopPropagation();\n    else if (event && event.originalEvent && event.originalEvent.stopPropagation) event.originalEvent.stopPropagation();\n    dispatch(layoutShowingNavMenu(status ? MENU_NAME : ''));\n  };\n\n  useEffect(() => {\n    dispatch(layoutShowingNavMenu(''));\n    // eslint-disable-next-line\n  }, [attrMenuAnimate, behaviourHtmlData, attrMobile, color]);\n\n  if (items && items.length > 0) {\n    return (\n      <Dropdown\n        as=\"li\"\n        bsPrefix=\"list-inline-item\"\n        onToggle={onToggle}\n        show={showingNavMenu === MENU_NAME}\n        align={placement === MENU_PLACEMENT.Horizontal ? 'end' : 'start'}\n      >\n        <Dropdown.Toggle as={NotificationsDropdownToggle} />\n        <Dropdown.Menu\n          as={NotificationsDropdownMenu}\n          items={items}\n          popperConfig={{\n            modifiers: [\n              {\n                name: 'offset',\n                options: {\n                  offset: () => {\n                    if (placement === MENU_PLACEMENT.Horizontal) {\n                      return [0, 7];\n                    }\n                    if (window.innerWidth < 768) {\n                      return [-168, 7];\n                    }\n                    return [-162, 7];\n                  },\n                },\n              },\n            ],\n          }}\n        />\n      </Dropdown>\n    );\n  }\n  return <></>;\n};\nexport default React.memo(Notifications);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}