{"ast":null,"code":"var _jsxFileName = \"/Users/caio/Projects/Samples/app-vawlog/src/views/users/components/Table.js\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = _ref => {\n  let {\n    tableInstance,\n    className = 'react-table boxed'\n  } = _ref;\n  const {\n    getTableProps,\n    headerGroups,\n    page,\n    getTableBodyProps,\n    prepareRow,\n    toggleAllPageRowsSelected,\n    setIsOpenAddEditModal\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: className,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map((headerGroup, headerIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map((column, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(column.getSortByToggleProps()),\n              className: classNames(column.headerClassName, {\n                sorting_desc: column.isSortedDesc,\n                sorting_asc: column.isSorted && !column.isSortedDesc,\n                sorting: column.sortable\n              }),\n              children: column.render('Header')\n            }, `th.${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 19\n            }, this);\n          })\n        }, `header${headerIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: page.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            className: classNames({\n              selected: row.isSelected\n            }),\n            children: row.cells.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              onClick: () => {\n                if (cell.column.id === 'name') {\n                  toggleAllPageRowsSelected(false);\n                  row.toggleRowSelected();\n                  setIsOpenAddEditModal(true);\n                } else {\n                  row.toggleRowSelected();\n                }\n              },\n              children: cell.render('Cell')\n            }, `td.${cellIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this))\n          }, `tr.${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["classNames","React","Table","tableInstance","className","getTableProps","headerGroups","page","getTableBodyProps","prepareRow","toggleAllPageRowsSelected","setIsOpenAddEditModal","map","headerGroup","headerIndex","getHeaderGroupProps","headers","column","index","getHeaderProps","getSortByToggleProps","headerClassName","sorting_desc","isSortedDesc","sorting_asc","isSorted","sorting","sortable","render","row","i","getRowProps","selected","isSelected","cells","cell","cellIndex","getCellProps","id","toggleRowSelected"],"sources":["/Users/caio/Projects/Samples/app-vawlog/src/views/users/components/Table.js"],"sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nconst Table = ({ tableInstance, className = 'react-table boxed' }) => {\n  const { getTableProps, headerGroups, page, getTableBodyProps, prepareRow, toggleAllPageRowsSelected, setIsOpenAddEditModal } = tableInstance;\n  return (\n    <>\n      <table className={className} {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup, headerIndex) => (\n            <tr key={`header${headerIndex}`} {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column, index) => {\n                return (\n                  <th\n                    key={`th.${index}`}\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={classNames(column.headerClassName, {\n                      sorting_desc: column.isSortedDesc,\n                      sorting_asc: column.isSorted && !column.isSortedDesc,\n                      sorting: column.sortable,\n                    })}\n                  >\n                    {column.render('Header')}\n                  </th>\n                );\n              })}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n\n            return (\n              <tr key={`tr.${i}`} {...row.getRowProps()} className={classNames({ selected: row.isSelected })}>\n                {row.cells.map((cell, cellIndex) => (\n                  <td\n                    key={`td.${cellIndex}`}\n                    {...cell.getCellProps()}\n                    onClick={() => {\n                      if (cell.column.id === 'name') {\n                        toggleAllPageRowsSelected(false);\n                        row.toggleRowSelected();\n                        setIsOpenAddEditModal(true);\n                      } else {\n                        row.toggleRowSelected();\n                      }\n                    }}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\nexport default Table;\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,MAAMC,KAAK,GAAG,QAAwD;EAAA,IAAvD;IAAEC,aAAa;IAAEC,SAAS,GAAG;EAAoB,CAAC;EAC/D,MAAM;IAAEC,aAAa;IAAEC,YAAY;IAAEC,IAAI;IAAEC,iBAAiB;IAAEC,UAAU;IAAEC,yBAAyB;IAAEC;EAAsB,CAAC,GAAGR,aAAa;EAC5I,oBACE;IAAA,uBACE;MAAO,SAAS,EAAEC,SAAU;MAAA,GAAKC,aAAa,EAAE;MAAA,wBAC9C;QAAA,UACGC,YAAY,CAACM,GAAG,CAAC,CAACC,WAAW,EAAEC,WAAW,kBACzC;UAAA,GAAqCD,WAAW,CAACE,mBAAmB,EAAE;UAAA,UACnEF,WAAW,CAACG,OAAO,CAACJ,GAAG,CAAC,CAACK,MAAM,EAAEC,KAAK,KAAK;YAC1C,oBACE;cAAA,GAEMD,MAAM,CAACE,cAAc,CAACF,MAAM,CAACG,oBAAoB,EAAE,CAAC;cACxD,SAAS,EAAEpB,UAAU,CAACiB,MAAM,CAACI,eAAe,EAAE;gBAC5CC,YAAY,EAAEL,MAAM,CAACM,YAAY;gBACjCC,WAAW,EAAEP,MAAM,CAACQ,QAAQ,IAAI,CAACR,MAAM,CAACM,YAAY;gBACpDG,OAAO,EAAET,MAAM,CAACU;cAClB,CAAC,CAAE;cAAA,UAEFV,MAAM,CAACW,MAAM,CAAC,QAAQ;YAAC,GARlB,MAAKV,KAAM,EAAC;cAAA;cAAA;cAAA;YAAA,QASf;UAET,CAAC;QAAC,GAfM,SAAQJ,WAAY,EAAC;UAAA;UAAA;UAAA;QAAA,QAiBhC;MAAC;QAAA;QAAA;QAAA;MAAA,QACI,eACR;QAAA,GAAWN,iBAAiB,EAAE;QAAA,UAC3BD,IAAI,CAACK,GAAG,CAAC,CAACiB,GAAG,EAAEC,CAAC,KAAK;UACpBrB,UAAU,CAACoB,GAAG,CAAC;UAEf,oBACE;YAAA,GAAwBA,GAAG,CAACE,WAAW,EAAE;YAAE,SAAS,EAAE/B,UAAU,CAAC;cAAEgC,QAAQ,EAAEH,GAAG,CAACI;YAAW,CAAC,CAAE;YAAA,UAC5FJ,GAAG,CAACK,KAAK,CAACtB,GAAG,CAAC,CAACuB,IAAI,EAAEC,SAAS,kBAC7B;cAAA,GAEMD,IAAI,CAACE,YAAY,EAAE;cACvB,OAAO,EAAE,MAAM;gBACb,IAAIF,IAAI,CAAClB,MAAM,CAACqB,EAAE,KAAK,MAAM,EAAE;kBAC7B5B,yBAAyB,CAAC,KAAK,CAAC;kBAChCmB,GAAG,CAACU,iBAAiB,EAAE;kBACvB5B,qBAAqB,CAAC,IAAI,CAAC;gBAC7B,CAAC,MAAM;kBACLkB,GAAG,CAACU,iBAAiB,EAAE;gBACzB;cACF,CAAE;cAAA,UAEDJ,IAAI,CAACP,MAAM,CAAC,MAAM;YAAC,GAZd,MAAKQ,SAAU,EAAC;cAAA;cAAA;cAAA;YAAA,QAczB;UAAC,GAjBM,MAAKN,CAAE,EAAC;YAAA;YAAA;YAAA;UAAA,QAkBb;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACP;AAEP,CAAC;AAAC,KAxDI5B,KAAK;AAyDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}